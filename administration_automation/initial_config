#!/bin/bash

# This script is intended to be deployed to an Ubuntu 22.04LTS machine. Whether it be VM or baremetal.

sudo apt update && sudo apt upgrade -yy

# Function to output text in green
function green_echo() {
  echo -e "\033[0;32m$1\033[0m" > /dev/tty
}

# Create or clear the log file
LOG_FILE="$(dirname "$0")/initial_config.log"
> "$LOG_FILE" # Clears the log file

# Redirect all stdout and stderr to the log file
exec > >(tee -a "$LOG_FILE") 2>&1

clear

# Install the 45 Drives File Sharing module for Cockpit
read -p "Would you like to install the 45 Drives File Sharing module for Cockpit? (File Server) (y/n): " INSTALL_COCKPIT_FILE_SHARING
if [[ "$INSTALL_COCKPIT_FILE_SHARING" =~ ^[Yy]$ ]]; then
    green_echo "Downloading and installing Cockpit Identities..."
    curl -LO https://github.com/45Drives/cockpit-identities/releases/download/v0.1.12/cockpit-identities_0.1.12-1focal_all.deb
    sudo apt install -y ./cockpit-identities_0.1.12-1focal_all.deb
    rm -f cockpit-identities_0.1.12-1focal_all.deb

    green_echo "Downloading and installing Cockpit File Sharing..."
    curl -LO https://github.com/45Drives/cockpit-file-sharing/releases/download/v4.2.8/cockpit-file-sharing_4.2.8-1focal_all.deb
    sudo apt install -y ./cockpit-file-sharing_4.2.8-1focal_all.deb
    rm -f cockpit-file-sharing_4.2.8-1focal_all.deb

    green_echo "Cockpit File Sharing has been installed and enabled!"
else
    green_echo "Skipping Cockpit File Sharing installation."
fi

# Set the hostname
read -p "$(green_echo 'Enter the hostname you want to set: ')" NEW_HOSTNAME
green_echo "Setting hostname to $NEW_HOSTNAME..."
sudo hostnamectl set-hostname "$NEW_HOSTNAME"
# Update /etc/hosts
green_echo "Updating /etc/hosts file..."
sudo sed -i "s/127.0.1.1.*/127.0.1.1\t$NEW_HOSTNAME/g" /etc/hosts

# Set a secure root password
green_echo "Generating a secure root password..."
ROOT_PASSWORD=$(< /dev/urandom tr -dc 'A-Z' | head -c 3)$(< /dev/urandom tr -dc '@#$%&*' | head -c 3)$(< /dev/urandom tr -dc 'a-z0-9' | head -c 12 | shuf | tr -d '\n')
ROOT_PASSWORD=$(echo "$ROOT_PASSWORD" | fold -w1 | shuf | tr -d '\n') # Shuffle to randomize order
green_echo "Root password: $ROOT_PASSWORD"
echo "root:$ROOT_PASSWORD" | sudo chpasswd
history -d $(history 1)  # Remove the password from history

clear

green_echo "Setup complete!"
echo -e "\nDetails:\n"
green_echo "- System has been updated and upgraded"
green_echo "- Set the hostname to $NEW_HOSTNAME"
green_echo "- Installed TailScale"
green_echo "- Root password: $ROOT_PASSWORD"

# Reboot the System
read -p "Do you want to reboot the system? (Y/N): " answer
if [ "$answer" == "Y" ]; then
  sudo reboot now

else
  echo "Exiting."
fi
