#!/bin/bash

# Function to output text in green
function green_echo() {
  echo -e "\033[0;32m$1\033[0m"
}

# Update and upgrade the system
green_echo "Updating and upgrading the system..."
sudo apt update && sudo apt dist-upgrade -yy

# Install tailscale and run it
green_echo "Installing and running the TailScale installer..."
curl -fsSL https://tailscale.com/install.sh | sh
sudo tailscale up

# Set timezone to America/Chicago
green_echo "Setting timezone to America/Chicago..."
sudo timedatectl set-timezone America/Chicago

# Install the Proxmox QEMU Guest Agent
green_echo "Installing Proxmox QEMU Guest Agent..."
sudo apt install qemu-guest-agent -y

# Set the hostname
read -p "$(green_echo 'Enter the hostname you want to set: ')" NEW_HOSTNAME
green_echo "Setting hostname to $NEW_HOSTNAME..."
sudo hostnamectl set-hostname "$NEW_HOSTNAME"

# Update /etc/hosts
green_echo "Updating /etc/hosts file..."
sudo sed -i "s/127.0.1.1.*/127.0.1.1\t$NEW_HOSTNAME/g" /etc/hosts

# Set a secure root password
green_echo "Generating a secure root password..."
ROOT_PASSWORD=$(< /dev/urandom tr -dc 'A-Z' | head -c 3)$(< /dev/urandom tr -dc '@#$%&*' | head -c 3)$(< /dev/urandom tr -dc 'a-z0-9' | head -c 12 | shuf | tr -d '\n')
ROOT_PASSWORD=$(echo "$ROOT_PASSWORD" | fold -w1 | shuf | tr -d '\n') # Shuffle to randomize order
green_echo "Root password: $ROOT_PASSWORD"
echo "root:$ROOT_PASSWORD" | sudo chpasswd
history -d $(history 1)  # Remove the password from history

# Create a password for the SSH key
green_echo "Generating a secure password for the SSH key..."
SSH_KEY_PASSWORD=$(< /dev/urandom tr -dc 'A-Z' | head -c 3)$(< /dev/urandom tr -dc '@#$%&*' | head -c 3)$(< /dev/urandom tr -dc 'a-z0-9' | head -c 12 | shuf | tr -d '\n')
SSH_KEY_PASSWORD=$(echo "$SSH_KEY_PASSWORD" | fold -w1 | shuf | tr -d '\n') # Shuffle to randomize order
green_echo "SSH key password: $SSH_KEY_PASSWORD"

# Create SSH Key Pair
green_echo "Creating a 4096-bit SSH key pair for user 'cj'..."
# Get the current hostname
CURRENT_HOSTNAME=$(hostname)
# Generate the SSH key pair with the hostname as the file name and the password
sudo -u cj ssh-keygen -t rsa -b 4096 -f /home/cj/.ssh/id_rsa_${CURRENT_HOSTNAME} -N "$SSH_KEY_PASSWORD"

# Add the public key to the authorized_keys file
green_echo "Adding the public key to /home/cj/.ssh/authorized_keys..."
sudo -u cj cat /home/cj/.ssh/id_rsa_${CURRENT_HOSTNAME}.pub >> /home/cj/.ssh/authorized_keys
sudo -u cj chmod 600 /home/cj/.ssh/authorized_keys
sudo -u cj chmod 700 /home/cj/.ssh

# Delete the public key file
green_echo "Deleting the public key file..."
sudo -u cj rm /home/cj/.ssh/id_rsa_${CURRENT_HOSTNAME}.pub

# Upload the private key to the remote SFTP location
REMOTE_SFTP="initialconfig@backup-01-scale:/mnt/nexusedgeit_data/Software/SSH_Keys"
green_echo "Uploading private key to remote SFTP server at $REMOTE_SFTP..."
scp /home/cj/.ssh/id_rsa_${CURRENT_HOSTNAME} "$REMOTE_SFTP"

# Delete the private key locally
green_echo "Deleting private key locally..."
sudo -u cj rm /home/cj/.ssh/id_rsa_${CURRENT_HOSTNAME}

# Edit SSH configuration
green_echo "Configuring SSH server settings..."
SSH_CONFIG="/etc/ssh/sshd_config"
sudo sed -i "s/^Include \/etc\/ssh\/sshd_config.d\/\*.conf/#&/" $SSH_CONFIG
sudo sed -i "s/^#Port 22/Port 15370/" $SSH_CONFIG
sudo sed -i "s/^#PermitRootLogin.*/PermitRootLogin no/" $SSH_CONFIG
sudo sed -i "s/^#PasswordAuthentication.*/PasswordAuthentication no/" $SSH_CONFIG
sudo sed -i "s/^#PubkeyAuthentication.*/PubkeyAuthentication yes/" $SSH_CONFIG

green_echo "Restarting SSH service..."
sudo systemctl restart sshd

green_echo "Setup complete!"

# Reboot the System
read -p "Do you want to reboot the system? (Y/N): " answer
if [ "$answer" == "Y" ]; then
  sudo reboot now

else
  echo "Exiting."
fi
